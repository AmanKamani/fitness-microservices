services:
  userdb:
    container_name: userdb
    image: postgres:14-alpine
    restart: always
    ports:
      - "9001:5432"
    volumes:
      - "./docker-volumes/userdb:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user
    networks:
      - fitness-network

  activitydb:
    container_name: activitydb
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - "./docker-volumes/activitydb:/data/db"
    environment:
      MONGO_INITDB_DATABASE: fitnessactivity
    networks:
      - fitness-network

  recommendationdb:
    container_name: recommendationdb
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - "./docker-volumes/recommendationdb:/data/db"
    environment:
      MONGO_INITDB_DATABASE: fitnessrecommendation
    networks:
      - fitness-network

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
    restart: always
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    networks:
      - fitness-network

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    networks:
      - fitness-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.3.3
    ports:
      - "2222:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: "admin"
      KC_BOOTSTRAP_ADMIN_PASSWORD: "admin"
    command: start-dev

networks:
  fitness-network:
    driver: bridge